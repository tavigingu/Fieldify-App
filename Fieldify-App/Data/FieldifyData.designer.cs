#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fieldify_App.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Fieldify")]
	public partial class FieldifyDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserType(UserType instance);
    partial void UpdateUserType(UserType instance);
    partial void DeleteUserType(UserType instance);
    partial void InsertTipuriTeren(TipuriTeren instance);
    partial void UpdateTipuriTeren(TipuriTeren instance);
    partial void DeleteTipuriTeren(TipuriTeren instance);
    partial void InsertTeren(Teren instance);
    partial void UpdateTeren(Teren instance);
    partial void DeleteTeren(Teren instance);
    partial void InsertProgramare(Programare instance);
    partial void UpdateProgramare(Programare instance);
    partial void DeleteProgramare(Programare instance);
    #endregion
		
		public FieldifyDataDataContext() : 
				base(global::Fieldify_App.Properties.Settings.Default.FieldifyConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FieldifyDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FieldifyDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FieldifyDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FieldifyDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserType> UserTypes
		{
			get
			{
				return this.GetTable<UserType>();
			}
		}
		
		public System.Data.Linq.Table<TipuriTeren> TipuriTerens
		{
			get
			{
				return this.GetTable<TipuriTeren>();
			}
		}
		
		public System.Data.Linq.Table<Teren> Terens
		{
			get
			{
				return this.GetTable<Teren>();
			}
		}
		
		public System.Data.Linq.Table<Programare> Programares
		{
			get
			{
				return this.GetTable<Programare>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nume;
		
		private string _Prenume;
		
		private string _Username;
		
		private string _Email;
		
		private string _Parola;
		
		private string _NumarTelefon;
		
		private System.Nullable<int> _UserTypeId;
		
		private string _Description;
		
		private System.Data.Linq.Binary _ProfileImage;
		
		private EntitySet<Programare> _Programares;
		
		private EntityRef<UserType> _UserType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnPrenumeChanging(string value);
    partial void OnPrenumeChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnParolaChanging(string value);
    partial void OnParolaChanged();
    partial void OnNumarTelefonChanging(string value);
    partial void OnNumarTelefonChanged();
    partial void OnUserTypeIdChanging(System.Nullable<int> value);
    partial void OnUserTypeIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnProfileImageChanging(System.Data.Linq.Binary value);
    partial void OnProfileImageChanged();
    #endregion
		
		public User()
		{
			this._Programares = new EntitySet<Programare>(new Action<Programare>(this.attach_Programares), new Action<Programare>(this.detach_Programares));
			this._UserType = default(EntityRef<UserType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenume", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Prenume
		{
			get
			{
				return this._Prenume;
			}
			set
			{
				if ((this._Prenume != value))
				{
					this.OnPrenumeChanging(value);
					this.SendPropertyChanging();
					this._Prenume = value;
					this.SendPropertyChanged("Prenume");
					this.OnPrenumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parola", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Parola
		{
			get
			{
				return this._Parola;
			}
			set
			{
				if ((this._Parola != value))
				{
					this.OnParolaChanging(value);
					this.SendPropertyChanging();
					this._Parola = value;
					this.SendPropertyChanged("Parola");
					this.OnParolaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumarTelefon", DbType="NVarChar(20)")]
		public string NumarTelefon
		{
			get
			{
				return this._NumarTelefon;
			}
			set
			{
				if ((this._NumarTelefon != value))
				{
					this.OnNumarTelefonChanging(value);
					this.SendPropertyChanging();
					this._NumarTelefon = value;
					this.SendPropertyChanged("NumarTelefon");
					this.OnNumarTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeId", DbType="Int")]
		public System.Nullable<int> UserTypeId
		{
			get
			{
				return this._UserTypeId;
			}
			set
			{
				if ((this._UserTypeId != value))
				{
					if (this._UserType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UserTypeId = value;
					this.SendPropertyChanged("UserTypeId");
					this.OnUserTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileImage", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ProfileImage
		{
			get
			{
				return this._ProfileImage;
			}
			set
			{
				if ((this._ProfileImage != value))
				{
					this.OnProfileImageChanging(value);
					this.SendPropertyChanging();
					this._ProfileImage = value;
					this.SendPropertyChanged("ProfileImage");
					this.OnProfileImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Programare", Storage="_Programares", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Programare> Programares
		{
			get
			{
				return this._Programares;
			}
			set
			{
				this._Programares.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserType_User", Storage="_UserType", ThisKey="UserTypeId", OtherKey="Id", IsForeignKey=true)]
		public UserType UserType
		{
			get
			{
				return this._UserType.Entity;
			}
			set
			{
				UserType previousValue = this._UserType.Entity;
				if (((previousValue != value) 
							|| (this._UserType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserType.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._UserType.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._UserTypeId = value.Id;
					}
					else
					{
						this._UserTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Programares(Programare entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Programares(Programare entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserTypes")]
	public partial class UserType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TypeName;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    #endregion
		
		public UserType()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserType_User", Storage="_Users", ThisKey="Id", OtherKey="UserTypeId")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserType = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipuriTeren")]
	public partial class TipuriTeren : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nume;
		
		private EntitySet<Teren> _Terens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    #endregion
		
		public TipuriTeren()
		{
			this._Terens = new EntitySet<Teren>(new Action<Teren>(this.attach_Terens), new Action<Teren>(this.detach_Terens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipuriTeren_Teren", Storage="_Terens", ThisKey="Id", OtherKey="TipId")]
		public EntitySet<Teren> Terens
		{
			get
			{
				return this._Terens;
			}
			set
			{
				this._Terens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Terens(Teren entity)
		{
			this.SendPropertyChanging();
			entity.TipuriTeren = this;
		}
		
		private void detach_Terens(Teren entity)
		{
			this.SendPropertyChanging();
			entity.TipuriTeren = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Terenuri")]
	public partial class Teren : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nume;
		
		private int _TipId;
		
		private decimal _Pret;
		
		private string _Detalii;
		
		private EntitySet<Programare> _Programares;
		
		private EntityRef<TipuriTeren> _TipuriTeren;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnTipIdChanging(int value);
    partial void OnTipIdChanged();
    partial void OnPretChanging(decimal value);
    partial void OnPretChanged();
    partial void OnDetaliiChanging(string value);
    partial void OnDetaliiChanged();
    #endregion
		
		public Teren()
		{
			this._Programares = new EntitySet<Programare>(new Action<Programare>(this.attach_Programares), new Action<Programare>(this.detach_Programares));
			this._TipuriTeren = default(EntityRef<TipuriTeren>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipId", DbType="Int NOT NULL")]
		public int TipId
		{
			get
			{
				return this._TipId;
			}
			set
			{
				if ((this._TipId != value))
				{
					if (this._TipuriTeren.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipIdChanging(value);
					this.SendPropertyChanging();
					this._TipId = value;
					this.SendPropertyChanged("TipId");
					this.OnTipIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pret", DbType="Decimal(10,2) NOT NULL")]
		public decimal Pret
		{
			get
			{
				return this._Pret;
			}
			set
			{
				if ((this._Pret != value))
				{
					this.OnPretChanging(value);
					this.SendPropertyChanging();
					this._Pret = value;
					this.SendPropertyChanged("Pret");
					this.OnPretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalii", DbType="NVarChar(100)")]
		public string Detalii
		{
			get
			{
				return this._Detalii;
			}
			set
			{
				if ((this._Detalii != value))
				{
					this.OnDetaliiChanging(value);
					this.SendPropertyChanging();
					this._Detalii = value;
					this.SendPropertyChanged("Detalii");
					this.OnDetaliiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teren_Programare", Storage="_Programares", ThisKey="Id", OtherKey="TerenId")]
		public EntitySet<Programare> Programares
		{
			get
			{
				return this._Programares;
			}
			set
			{
				this._Programares.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipuriTeren_Teren", Storage="_TipuriTeren", ThisKey="TipId", OtherKey="Id", IsForeignKey=true)]
		public TipuriTeren TipuriTeren
		{
			get
			{
				return this._TipuriTeren.Entity;
			}
			set
			{
				TipuriTeren previousValue = this._TipuriTeren.Entity;
				if (((previousValue != value) 
							|| (this._TipuriTeren.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipuriTeren.Entity = null;
						previousValue.Terens.Remove(this);
					}
					this._TipuriTeren.Entity = value;
					if ((value != null))
					{
						value.Terens.Add(this);
						this._TipId = value.Id;
					}
					else
					{
						this._TipId = default(int);
					}
					this.SendPropertyChanged("TipuriTeren");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Programares(Programare entity)
		{
			this.SendPropertyChanging();
			entity.Teren = this;
		}
		
		private void detach_Programares(Programare entity)
		{
			this.SendPropertyChanging();
			entity.Teren = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Programari")]
	public partial class Programare : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _TerenId;
		
		private int _UserId;
		
		private System.DateTime _DataProgramare;
		
		private System.TimeSpan _OraInceput;
		
		private System.TimeSpan _OraSfarsit;
		
		private string _StatusProgramare;
		
		private EntityRef<Teren> _Teren;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTerenIdChanging(int value);
    partial void OnTerenIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnDataProgramareChanging(System.DateTime value);
    partial void OnDataProgramareChanged();
    partial void OnOraInceputChanging(System.TimeSpan value);
    partial void OnOraInceputChanged();
    partial void OnOraSfarsitChanging(System.TimeSpan value);
    partial void OnOraSfarsitChanged();
    partial void OnStatusProgramareChanging(string value);
    partial void OnStatusProgramareChanged();
    #endregion
		
		public Programare()
		{
			this._Teren = default(EntityRef<Teren>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerenId", DbType="Int NOT NULL")]
		public int TerenId
		{
			get
			{
				return this._TerenId;
			}
			set
			{
				if ((this._TerenId != value))
				{
					if (this._Teren.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTerenIdChanging(value);
					this.SendPropertyChanging();
					this._TerenId = value;
					this.SendPropertyChanged("TerenId");
					this.OnTerenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataProgramare", DbType="Date NOT NULL")]
		public System.DateTime DataProgramare
		{
			get
			{
				return this._DataProgramare;
			}
			set
			{
				if ((this._DataProgramare != value))
				{
					this.OnDataProgramareChanging(value);
					this.SendPropertyChanging();
					this._DataProgramare = value;
					this.SendPropertyChanged("DataProgramare");
					this.OnDataProgramareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OraInceput", DbType="Time NOT NULL")]
		public System.TimeSpan OraInceput
		{
			get
			{
				return this._OraInceput;
			}
			set
			{
				if ((this._OraInceput != value))
				{
					this.OnOraInceputChanging(value);
					this.SendPropertyChanging();
					this._OraInceput = value;
					this.SendPropertyChanged("OraInceput");
					this.OnOraInceputChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OraSfarsit", DbType="Time NOT NULL")]
		public System.TimeSpan OraSfarsit
		{
			get
			{
				return this._OraSfarsit;
			}
			set
			{
				if ((this._OraSfarsit != value))
				{
					this.OnOraSfarsitChanging(value);
					this.SendPropertyChanging();
					this._OraSfarsit = value;
					this.SendPropertyChanged("OraSfarsit");
					this.OnOraSfarsitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusProgramare", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string StatusProgramare
		{
			get
			{
				return this._StatusProgramare;
			}
			set
			{
				if ((this._StatusProgramare != value))
				{
					this.OnStatusProgramareChanging(value);
					this.SendPropertyChanging();
					this._StatusProgramare = value;
					this.SendPropertyChanged("StatusProgramare");
					this.OnStatusProgramareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teren_Programare", Storage="_Teren", ThisKey="TerenId", OtherKey="Id", IsForeignKey=true)]
		public Teren Teren
		{
			get
			{
				return this._Teren.Entity;
			}
			set
			{
				Teren previousValue = this._Teren.Entity;
				if (((previousValue != value) 
							|| (this._Teren.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teren.Entity = null;
						previousValue.Programares.Remove(this);
					}
					this._Teren.Entity = value;
					if ((value != null))
					{
						value.Programares.Add(this);
						this._TerenId = value.Id;
					}
					else
					{
						this._TerenId = default(int);
					}
					this.SendPropertyChanged("Teren");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Programare", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Programares.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Programares.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}

        public decimal Pret { get; internal set; }
        public string UserName { get; internal set; }

        public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
